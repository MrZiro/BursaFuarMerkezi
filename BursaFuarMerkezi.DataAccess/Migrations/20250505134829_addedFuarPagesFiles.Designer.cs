// <auto-generated />
using System;
using BursaFuarMerkezi.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BursaFuarMerkezi.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250505134829_addedFuarPagesFiles")]
    partial class addedFuarPagesFiles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BursaFuarMerkezi.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BursaFuarMerkezi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Home Appliances"
                        });
                });

            modelBuilder.Entity("BursaFuarMerkezi.Models.FuarPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeaturedImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MetaKeywords")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FuarPages");
                });

            modelBuilder.Entity("BursaFuarMerkezi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Billy Spark",
                            CategoryId = 1,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "SWD9999001",
                            ImageUrl = "",
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            Title = "Fortune of Time"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Nancy Hoover",
                            CategoryId = 1,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "CAW777777701",
                            ImageUrl = "",
                            ListPrice = 40.0,
                            Price = 30.0,
                            Price100 = 20.0,
                            Price50 = 25.0,
                            Title = "Dark Skies"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Julian Button",
                            CategoryId = 1,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "RITO5555501",
                            ImageUrl = "",
                            ListPrice = 55.0,
                            Price = 50.0,
                            Price100 = 35.0,
                            Price50 = 40.0,
                            Title = "Vanish in the Sunset"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Abby Muscles",
                            CategoryId = 2,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "WS3333333301",
                            ImageUrl = "",
                            ListPrice = 70.0,
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0,
                            Title = "Cotton Candy"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Ron Parker",
                            CategoryId = 2,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "SOTJ1111111101",
                            ImageUrl = "",
                            ListPrice = 30.0,
                            Price = 27.0,
                            Price100 = 20.0,
                            Price50 = 25.0,
                            Title = "Rock in the Ocean"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Laura Phantom",
                            CategoryId = 3,
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "FOT000000001",
                            ImageUrl = "",
                            ListPrice = 25.0,
                            Price = 23.0,
                            Price100 = 20.0,
                            Price50 = 22.0,
                            Title = "Leaves and Wonders"
                        },
                        new
                        {
                            Id = 7,
                            Author = "TechPro",
                            CategoryId = 1,
                            Description = "High-performance gaming laptop with RTX graphics, 16GB RAM, and 1TB SSD. Perfect for gamers and content creators.",
                            ISBN = "TECH7001001",
                            ImageUrl = "",
                            ListPrice = 1299.0,
                            Price = 1249.0,
                            Price100 = 1149.0,
                            Price50 = 1199.0,
                            Title = "Gaming Laptop X1"
                        },
                        new
                        {
                            Id = 8,
                            Author = "SoundWave",
                            CategoryId = 1,
                            Description = "Portable Bluetooth speaker with 24-hour battery life, waterproof design, and superior sound quality.",
                            ISBN = "SOUND8001001",
                            ImageUrl = "",
                            ListPrice = 89.0,
                            Price = 79.0,
                            Price100 = 69.0,
                            Price50 = 74.0,
                            Title = "Bluetooth Speaker"
                        },
                        new
                        {
                            Id = 9,
                            Author = "HealthTech",
                            CategoryId = 1,
                            Description = "Advanced fitness tracker with heart rate monitor, sleep tracking, and smartphone notifications.",
                            ISBN = "HEALTH9001001",
                            ImageUrl = "",
                            ListPrice = 79.0,
                            Price = 69.0,
                            Price100 = 59.0,
                            Price50 = 65.0,
                            Title = "Fitness Tracker"
                        },
                        new
                        {
                            Id = 10,
                            Author = "FashionPlus",
                            CategoryId = 2,
                            Description = "Premium denim jeans with modern slim fit design. Available in multiple washes.",
                            ISBN = "FASHION10001",
                            ImageUrl = "",
                            ListPrice = 89.0,
                            Price = 79.0,
                            Price100 = 69.0,
                            Price50 = 75.0,
                            Title = "Designer Jeans"
                        },
                        new
                        {
                            Id = 11,
                            Author = "KitchenElite",
                            CategoryId = 3,
                            Description = "Professional-grade blender with variable speed control and pulse function. Perfect for smoothies and food preparation.",
                            ISBN = "KITCHEN11001",
                            ImageUrl = "",
                            ListPrice = 129.0,
                            Price = 119.0,
                            Price100 = 99.0,
                            Price50 = 109.0,
                            Title = "Blender Pro"
                        },
                        new
                        {
                            Id = 12,
                            Author = "HomeElectronics",
                            CategoryId = 3,
                            Description = "Digital microwave oven with multiple power settings, timer, and child lock feature.",
                            ISBN = "HOME12001001",
                            ImageUrl = "",
                            ListPrice = 109.0,
                            Price = 99.0,
                            Price100 = 89.0,
                            Price50 = 95.0,
                            Title = "Microwave Oven"
                        },
                        new
                        {
                            Id = 13,
                            Author = "VisualTech",
                            CategoryId = 1,
                            Description = "4K Ultra HD Smart TV with built-in streaming apps, voice control, and HDR support.",
                            ISBN = "VISUAL13001",
                            ImageUrl = "",
                            ListPrice = 599.0,
                            Price = 549.0,
                            Price100 = 499.0,
                            Price50 = 519.0,
                            Title = "Smart TV 55-inch"
                        },
                        new
                        {
                            Id = 14,
                            Author = "SportGear",
                            CategoryId = 2,
                            Description = "Lightweight running shoes with cushioned soles and breathable mesh. Ideal for long-distance running.",
                            ISBN = "SPORT14001001",
                            ImageUrl = "",
                            ListPrice = 119.0,
                            Price = 109.0,
                            Price100 = 89.0,
                            Price50 = 99.0,
                            Title = "Running Shoes"
                        },
                        new
                        {
                            Id = 15,
                            Author = "CleanAir",
                            CategoryId = 3,
                            Description = "HEPA air purifier that removes 99.97% of airborne particles. Perfect for allergies and asthma sufferers.",
                            ISBN = "CLEAN15001001",
                            ImageUrl = "",
                            ListPrice = 199.0,
                            Price = 179.0,
                            Price100 = 159.0,
                            Price50 = 169.0,
                            Title = "Air Purifier"
                        },
                        new
                        {
                            Id = 16,
                            Author = "TechInput",
                            CategoryId = 1,
                            Description = "RGB mechanical keyboard with customizable key switches and programmable macros for gaming and typing.",
                            ISBN = "TECH16001001",
                            ImageUrl = "",
                            ListPrice = 129.0,
                            Price = 119.0,
                            Price100 = 99.0,
                            Price50 = 109.0,
                            Title = "Mechanical Keyboard"
                        },
                        new
                        {
                            Id = 17,
                            Author = "StyleWear",
                            CategoryId = 2,
                            Description = "Genuine leather jacket with quilted lining. Classic design suitable for casual and formal occasions.",
                            ISBN = "STYLE17001001",
                            ImageUrl = "",
                            ListPrice = 229.0,
                            Price = 209.0,
                            Price100 = 189.0,
                            Price50 = 199.0,
                            Title = "Leather Jacket"
                        },
                        new
                        {
                            Id = 18,
                            Author = "CleanTech",
                            CategoryId = 3,
                            Description = "Smart robot vacuum with mapping technology, app control, and automatic charging. Keeps your floors spotless.",
                            ISBN = "CLEAN18001001",
                            ImageUrl = "",
                            ListPrice = 249.0,
                            Price = 229.0,
                            Price100 = 199.0,
                            Price50 = 219.0,
                            Title = "Robot Vacuum"
                        },
                        new
                        {
                            Id = 19,
                            Author = "PhotoPro",
                            CategoryId = 1,
                            Description = "20MP digital camera with 4K video recording, optical zoom, and image stabilization. Perfect for photography enthusiasts.",
                            ISBN = "PHOTO19001001",
                            ImageUrl = "",
                            ListPrice = 449.0,
                            Price = 419.0,
                            Price100 = 379.0,
                            Price50 = 399.0,
                            Title = "Digital Camera"
                        },
                        new
                        {
                            Id = 20,
                            Author = "ColdGear",
                            CategoryId = 2,
                            Description = "Thermal winter gloves with touchscreen compatibility and waterproof outer layer. Keeps your hands warm and dry.",
                            ISBN = "COLD20001001",
                            ImageUrl = "",
                            ListPrice = 49.0,
                            Price = 45.0,
                            Price100 = 39.0,
                            Price50 = 42.0,
                            Title = "Winter Gloves"
                        },
                        new
                        {
                            Id = 21,
                            Author = "KitchenPro",
                            CategoryId = 3,
                            Description = "Multi-function toaster oven with convection, broil, and toast settings. Compact design for small kitchens.",
                            ISBN = "KITCHEN21001",
                            ImageUrl = "",
                            ListPrice = 89.0,
                            Price = 79.0,
                            Price100 = 69.0,
                            Price50 = 75.0,
                            Title = "Toaster Oven"
                        },
                        new
                        {
                            Id = 22,
                            Author = "InputTech",
                            CategoryId = 1,
                            Description = "Ergonomic wireless mouse with adjustable DPI settings and long battery life. Comfortable for all-day use.",
                            ISBN = "INPUT22001001",
                            ImageUrl = "",
                            ListPrice = 39.0,
                            Price = 35.0,
                            Price100 = 29.0,
                            Price50 = 32.0,
                            Title = "Wireless Mouse"
                        },
                        new
                        {
                            Id = 23,
                            Author = "ComfortWear",
                            CategoryId = 2,
                            Description = "100% cotton polo shirt with moisture-wicking technology. Available in multiple colors.",
                            ISBN = "COMFORT23001",
                            ImageUrl = "",
                            ListPrice = 35.0,
                            Price = 32.0,
                            Price100 = 28.0,
                            Price50 = 30.0,
                            Title = "Casual Polo Shirt"
                        },
                        new
                        {
                            Id = 24,
                            Author = "BoilFast",
                            CategoryId = 3,
                            Description = "1.7L electric kettle with rapid boil technology, auto shut-off, and boil-dry protection. Perfect for tea and coffee lovers.",
                            ISBN = "BOIL24001001",
                            ImageUrl = "",
                            ListPrice = 45.0,
                            Price = 42.0,
                            Price100 = 35.0,
                            Price50 = 39.0,
                            Title = "Electric Kettle"
                        },
                        new
                        {
                            Id = 25,
                            Author = "AudioElite",
                            CategoryId = 1,
                            Description = "Over-ear wireless headphones with active noise cancellation, 30-hour battery life, and premium sound quality.",
                            ISBN = "AUDIO25001001",
                            ImageUrl = "",
                            ListPrice = 159.0,
                            Price = 149.0,
                            Price100 = 129.0,
                            Price50 = 139.0,
                            Title = "Wireless Headphones"
                        },
                        new
                        {
                            Id = 26,
                            Author = "TravelGear",
                            CategoryId = 2,
                            Description = "Water-resistant backpack with laptop compartment, multiple pockets, and USB charging port. Perfect for travel and daily use.",
                            ISBN = "TRAVEL26001",
                            ImageUrl = "",
                            ListPrice = 79.0,
                            Price = 69.0,
                            Price100 = 59.0,
                            Price50 = 65.0,
                            Title = "Backpack Pro"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BursaFuarMerkezi.Models.Product", b =>
                {
                    b.HasOne("BursaFuarMerkezi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BursaFuarMerkezi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BursaFuarMerkezi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BursaFuarMerkezi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BursaFuarMerkezi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
